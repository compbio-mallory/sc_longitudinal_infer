
# Get default tree with all default parameters
mkdir default
for j in `seq 1 5`; do mkdir default/rep$j; done
for j in `seq 1 5`; do python gen_tree.py -T 3 -t_v 15 7 0 -v1 0.2 -v2 0.4 -u 0.2 -B 0.2 -theta 0.2 -o default/rep$j/tree_default_rep${j}.csv; done
for j in `seq 1 5`; do python sim_par.py -a 0.01 -b 0.2 -m 0.2 -c 100 500 -mc 1.7 -f default/rep$j/tree_default_rep${j}.csv -P default/rep$j/default_rep${j}; done

# Get data for varying FP rate
for i in ap001 ap03 ap05; do for j in `seq 1 5`; do mkdir -p $i/rep$j; cp default/rep$j/tree*.csv $i/rep$j/; done; done
a=0.001; i=ap001; for j in `seq 1 5`; do python sim_par.py -a $a -f $i/rep$j/tree_default_rep${j}.csv -P $i/rep$j/input_${i}_rep${j}; done;
a=0.03; i=ap03; for j in `seq 1 5`; do python sim_par.py -a $a -f $i/rep$j/tree_default_rep${j}.csv -P $i/rep$j/input_${i}_rep${j}; done;
a=0.05; i=ap05; for j in `seq 1 5`; do python sim_par.py -a $a -f $i/rep$j/tree_default_rep${j}.csv -P $i/rep$j/input_${i}_rep${j}; done;

# Get data for varying FN rate
for i in bp1 bp3 bp4; do for j in `seq 1 5`; do mkdir -p $i/rep$j; cp default/rep$j/tree*.csv $i/rep$j/; done; done
b=0.1; i=bp1; for j in `seq 1 5`; do python sim_par.py -b $b -f $i/rep$j/tree_default_rep${j}.csv -P $i/rep$j/input_${i}_rep${j}; done;
b=0.3; i=bp3; for j in `seq 1 5`; do python sim_par.py -b $b -f $i/rep$j/tree_default_rep${j}.csv -P $i/rep$j/input_${i}_rep${j}; done;
b=0.4; i=bp4; for j in `seq 1 5`; do python sim_par.py -b $b -f $i/rep$j/tree_default_rep${j}.csv -P $i/rep$j/input_${i}_rep${j}; done;

# Get the tree structure and then the data for varying beta_splitting
for i in sp05 sp5; do for j in `seq 1 5`; do mkdir -p $i/rep$j; done; done
s=0.05; i=sp05; for j in `seq 1 5`; do python gen_tree.py -T 3 -t_v 15 7 0 -v1 0.2 -v2 0.4 -u 0.2 -B $s -theta 0.2 -o $i/rep$j/tree_sp05_rep${j}.csv; python sim_par.py -a 0.01 -b 0.2 -m 0.2 -c 100 500 -mc 1.7 -f $i/rep$j/tree_sp05_rep${j}.csv -P $i/rep$j/input_${i}_rep${j}; done
s=0.5; i=sp5; for j in `seq 1 5`; do python gen_tree.py -T 3 -t_v 15 7 0 -v1 0.2 -v2 0.4 -u 0.2 -B $s -theta 0.2 -o $i/rep$j/tree_sp5_rep${j}.csv; python sim_par.py -a 0.01 -b 0.2 -m 0.2 -c 100 500 -mc 1.7 -f $i/rep$j/tree_sp5_rep${j}.csv -P $i/rep$j/input_${i}_rep${j}; done

# Get data for varying missing rate
for i in mp3; do for j in `seq 1 5`; do mkdir -p $i/rep$j; cp default/rep$j/tree*.csv $i/rep$j/; done; done
m=0.3; i=mp3; for j in `seq 1 5`; do python sim_par.py -m $m -f $i/rep$j/tree_default_rep${j}.csv -P $i/rep$j/input_${i}_rep${j}; done;

# Get data for varying mutation constant
for i in mc12 mc2; do for j in `seq 1 5`; do mkdir -p $i/rep$j; cp default/rep$j/tree*.csv $i/rep$j/; done; done
mc=1.2; i=mc12; for j in `seq 1 5`; do python sim_par.py -mc $mc -f $i/rep$j/tree_default_rep${j}.csv -P $i/rep$j/input_${i}_rep${j}; done;
mc=2; i=mc2; for j in `seq 1 5`; do python sim_par.py -mc $mc -f $i/rep$j/tree_default_rep${j}.csv -P $i/rep$j/input_${i}_rep${j}; done;

# Get the tree structure and then the data for varying theta
for i in theta3 theta5; do for j in `seq 1 5`; do mkdir -p $i/rep$j; done; done
theta=0.3; i=theta3; for j in `seq 1 5`; do python gen_tree.py -T 3 -t_v 15 7 0 -v1 0.2 -v2 0.4 -u 0.2 -B 0.2 -theta $theta -o $i/rep$j/tree_theta3_rep${j}.csv; python sim_par.py -a 0.01 -b 0.2 -m 0.2 -c 100 500 -mc 1.7 -f $i/rep$j/tree_theta3_rep${j}.csv -P $i/rep$j/input_${i}_rep${j}; done
theta=0.5; i=theta5; for j in `seq 1 5`; do python gen_tree.py -T 3 -t_v 15 7 0 -v1 0.2 -v2 0.4 -u 0.2 -B 0.2 -theta $theta -o $i/rep$j/tree_theta5_rep${j}.csv; python sim_par.py -a 0.01 -b 0.2 -m 0.2 -c 100 500 -mc 1.7 -f $i/rep$j/tree_theta5_rep${j}.csv -P $i/rep$j/input_${i}_rep${j}; done

# Get the tree structure and then the data for varying threshold for multiple splits
for i in u0 u1 u3; do for j in `seq 1 5`; do mkdir -p $i/rep$j; done; done
u=0; i=u0; for j in `seq 1 5`; do python gen_tree.py -T 3 -t_v 15 7 0 -v1 0.2 -v2 0.4 -u $u -B 0.2 -theta 0.2 -o $i/rep$j/tree_u0_rep${j}.csv; python sim_par.py -a 0.01 -b 0.2 -m 0.2 -c 100 500 -mc 1.7 -f $i/rep$j/tree_u0_rep${j}.csv -P $i/rep$j/input_${i}_rep${j}; done
u=0.1; i=u1; for j in `seq 1 5`; do python gen_tree.py -T 3 -t_v 15 7 0 -v1 0.2 -v2 0.4 -u $u -B 0.2 -theta 0.2 -o $i/rep$j/tree_u1_rep${j}.csv; python sim_par.py -a 0.01 -b 0.2 -m 0.2 -c 100 500 -mc 1.7 -f $i/rep$j/tree_u1_rep${j}.csv -P $i/rep$j/input_${i}_rep${j}; done
u=0.3; i=u3; for j in `seq 1 5`; do python gen_tree.py -T 3 -t_v 15 7 0 -v1 0.2 -v2 0.4 -u $u -B 0.2 -theta 0.2 -o $i/rep$j/tree_u3_rep${j}.csv; python sim_par.py -a 0.01 -b 0.2 -m 0.2 -c 100 500 -mc 1.7 -f $i/rep$j/tree_u3_rep${j}.csv -P $i/rep$j/input_${i}_rep${j}; done

# Get the tree structure and then the data for varying v1 v2
for i in v1v2; do for j in `seq 1 5`; do mkdir -p $i/rep$j; done; done
i=v1v2; for j in `seq 1 5`; do python gen_tree.py -T 3 -t_v 15 7 0 -v1 0.05 -v2 0.2 -u 0.2 -B 0.2 -theta 0.2 -o $i/rep$j/tree_v1v2_rep${j}.csv; python sim_par.py -a 0.01 -b 0.2 -m 0.2 -c 100 500 -mc 1.7 -f $i/rep$j/tree_v1v2_rep${j}.csv -P $i/rep$j/input_${i}_rep${j}; done

# Get the tree structure with 4 timepoints
mkdir t4
for j in `seq 1 5`; do mkdir t4/rep$j; done
for j in `seq 1 5`; do python gen_tree.py -T 4 -t_v 20 12 6 0 -v1 0.2 -v2 0.4 -u 0.2 -B 0.2 -theta 0.2 -o t4/rep$j/tree_t4_rep${j}.csv; done
for j in `seq 1 5`; do python sim_par.py -a 0.01 -b 0.2 -m 0.2 -c 500 1000 1500 -mc 1.7 -f t4/rep$j/tree_t4_rep${j}.csv -P t4/rep$j/input_t4_rep${j}; done

# Get the tree structure with 5 timepoints
mkdir t5
for j in `seq 1 5`; do mkdir t5/rep$j; done
for j in `seq 1 5`; do python gen_tree.py -T 5 -t_v 25 18 10 4 0 -v1 0.2 -v2 0.4 -u 0.2 -B 0.2 -theta 0.2 -o t5/rep$j/tree_t5_rep${j}.csv; done
for j in `seq 1 5`; do python sim_par.py -a 0.01 -b 0.2 -m 0.2 -c 200 500 1500 1800 -mc 1.7 -f t5/rep$j/tree_t5_rep${j}.csv -P t5/rep$j/input_t5_rep${j}; done
